#!/bin/bash
#
# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END
#
# Copyright 2024 Saso Kiselkov. All rights reserved.

function my_realpath() {
        [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

OUTPUT="X-TCAS"

VSI_MODE="OFF"
VSI_STYLE=""
GTS820_MODE="OFF"
SNDSET="male1"
AUDIO="ON"
OS="$(uname)"

case "$OS" in
Darwin)
	REALPATH=my_realpath
	;;
*)
	REALPATH=realpath
	;;
esac

while getopts "a:v:s:GNh" opt; do
	case "$opt" in
	a)
		LIBACFUTILS="$(${REALPATH} "$OPTARG")"
		;;
	v)
		VSI_MODE="ON"
		VSI_STYLE="$OPTARG"
		;;
	s)
		SNDSET="$OPTARG"
		;;
	G)
		VSI_MODE="OFF"
		VSI_STYLE=""
		GTS820_MODE="ON"
		SNDSET="gts820"
		;;
	N)
		AUDIO="OFF"
		;;
	h)
		cat << EOF
Usage: $0 -a <libacfutils> [-GN] [-v <style>] [-s <sndset>]
    -a <libacfutils> : path to built libacfutils repo
    -G : behave as a Garmin GTS 820
    -N : disable audio generation entirely
    -v <style> : create a VSI-styled TCAS, where <style> is either
	"ATR" or "HONEYWELL"
    -s <sndset> : 
EOF
		exit
		;;
	*)
		echo "Invalid option -$OPTARG" >&2
		exit 1
		;;
	esac
done

if [ -z "$LIBACFUTILS" ]; then
	echo "Missing mandatory argument -a." \
	    "Try $0 -h for more information" >&2
	exit 1
fi

if [[ "$OS" = "Darwin" ]]; then
	NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
	rm -f CMakeCache.txt
	( cd src && rm -f CMakeCache.txt && \
	    cmake . -DLIBACFUTILS="${LIBACFUTILS}" -DAUDIO="${AUDIO}" \
	    -DVSI_MODE="${VSI_MODE}" -DVSI_STYLE="${VSI_STYLE}" \
	    -DGTS820_MODE="${GTS820_MODE}" \
	    -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" && \
	    make -j "$NCPUS" ) || exit 1
else
	NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo  | wc -l) + \
	    1 ))
	( cd src && rm -f CMakeCache.txt && \
	    cmake . -DLIBACFUTILS="${LIBACFUTILS}" -DAUDIO="${AUDIO}" \
	    -DVSI_MODE="${VSI_MODE}" -DVSI_STYLE="${VSI_STYLE}" \
	    -DGTS820_MODE="${GTS820_MODE}" && \
	    make -j "${NCPUS}" ) || exit 1
	( cd src && rm -f CMakeCache.txt && \
	    cmake . -DLIBACFUTILS="${LIBACFUTILS}" -DAUDIO="${AUDIO}" \
	    -DVSI_MODE="${VSI_MODE}" -DVSI_STYLE="${VSI_STYLE}" \
	    -DGTS820_MODE="${GTS820_MODE}" \
	    -DCMAKE_TOOLCHAIN_FILE="XCompile.cmake" \
	    -DHOST=x86_64-w64-mingw32 && \
	    make -j "${NCPUS}" ) || exit 1
fi

rm -rf "$OUTPUT"
mkdir -p "$OUTPUT/data/msgs"
if [[ $(uname) = "Darwin" ]]; then
	cp -r mac_x64 "$OUTPUT"
else
	cp -r {win,lin}_x64 "$OUTPUT"
fi
cp -r $SNDSET/*.wav "$OUTPUT/data/msgs"

if [[ "$VSI_STYLE" != 0 ]]; then
	cp -r fonts "$OUTPUT/data/"
fi
